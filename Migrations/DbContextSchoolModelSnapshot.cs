// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApi.Data;

#nullable disable

namespace SchoolApi.Migrations
{
    [DbContext(typeof(DbContextSchool))]
    partial class DbContextSchoolModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Machine Learning",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chemistry",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "C#",
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mathematic",
                            StudentId = 4
                        });
                });

            modelBuilder.Entity("SchoolApi.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "ИТП 22"
                        },
                        new
                        {
                            Id = -2,
                            Name = "ИТИ 21"
                        },
                        new
                        {
                            Id = -3,
                            Name = "ИТП 21"
                        },
                        new
                        {
                            Id = -4,
                            Name = "ИТИ 22"
                        });
                });

            modelBuilder.Entity("SchoolApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = -1,
                            Name = "Maroc DeBellevue"
                        },
                        new
                        {
                            Id = 2,
                            GroupId = -2,
                            Name = "Tommy Harveg"
                        },
                        new
                        {
                            Id = 3,
                            GroupId = -3,
                            Name = "Matt Connor"
                        },
                        new
                        {
                            Id = 4,
                            GroupId = -4,
                            Name = "Dan Potter"
                        });
                });

            modelBuilder.Entity("SchoolApi.Models.Course", b =>
                {
                    b.HasOne("SchoolApi.Models.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolApi.Models.Student", b =>
                {
                    b.HasOne("SchoolApi.Models.Group", null)
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolApi.Models.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SchoolApi.Models.Student", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
